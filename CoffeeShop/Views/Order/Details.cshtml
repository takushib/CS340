@model OrderViewModel

@{
    ViewData["Title"] = "Order Details";
}

<div class="details">
    <div class="row">
        <div class="col-md-12">
            <h1>Order Details</h1>
            <div class="form-container">
                <form asp-controller="Order" asp-action="Details" method="post">
                    <dl>
                        <dt>Store</dt>
                        <dd>@Model.StoreName</dd>
                        <dt>Completed</dt>
                        <dd>@Model.Completed</dd>
                        <dt>Picked Up</dt>
                        <dd>@Model.PickedUp</dd>
                    </dl>

                    <input type="hidden" asp-for="OrderId" />
                    <table class="table">
                        <tr>
                            <th>Item Name</th>
                            <th>Item Type</th>
                            <th>Quantity</th>
                            <th>Item Price</th>
                        </tr>
                        @foreach (var result in Model.OrderItems)
                        {
                            <tr>
                                <td>@result.ItemName</td>
                                <td>@result.ItemType</td>
                                <td>@result.Quantity</td>
                                <td>@Html.DisplayFor(_ => result.ItemPrice)</td>
                            </tr>
                        }
                    </table>
                    <div class="row">
                        <div class="col-md-3 col-md-offset-9">
                            <table class="table">
                                <tr>
                                    <th>SubTotal:</th>
                                    <td>@Html.DisplayFor(_ => Model.SubTotal)</td>
                                </tr>
                                <tr>
                                    <th>Tax Total:</th>
                                    <td>@Html.DisplayFor(_ => Model.TaxTotal)</td>
                                </tr>
                                <tr>
                                    <th>Grand Total:</th>
                                    <td>@Html.DisplayFor(_ => Model.GrandTotal)</td>
                                </tr>
                                <tr>
                                    <th>Reward Used:</th>
                                    <td>@Html.DisplayFor(_ => Model.RewardUsed)</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </form>
            </div>

            @if (!Model.Completed)
            {
                <form asp-controller="Order" asp-action="MarkComplete" asp-route-id="@Model.OrderId" method="post">
                    <button type="submit" class="btn btn-danger btn-sm">Completed</button>
                </form>
            }

            @if (Model.Completed && !Model.PickedUp)
            {
                <form asp-controller="Order" asp-action="MarkPickUp" asp-route-id="@Model.OrderId" method="post">
                    <button type="submit" class="btn btn-primary">Picked Up</button>
                </form>
            }
            <p>
                <a asp-controller="Order" asp-action="Index">Back to Orders</a>
            </p>
        </div>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}